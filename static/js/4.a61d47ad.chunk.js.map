{"version":3,"sources":["Components/users/users.module.css","Components/users/UserItem.tsx","Components/common/PaginationComponent.tsx","Components/common/ButtonUpComponent.tsx","Components/users/UsersComponent.tsx","redux/selectors/UsersSelectors.ts","Components/users/UsersContainer.tsx","thunks/usersThunk.ts"],"names":["module","exports","UserItem","React","memo","props","className","s","content__item","content__item_img","to","id","src","photos","small","alt","content__item_info","content__item_info_name","name","content__item_info_status","status","content__item_button","followed","onClick","unfollow","content__item_button_unfollow","disabled","isFollowingInProgress","some","follow","content__item_button_follow","PaginationComponent","pageCount","Math","ceil","totalUsersCount","pageSize","arrPageCount","i","push","content__wrapper_pagination","Pagination","count","siblingCount","color","onChange","_","page","p","pagination","ButtonUpComponent","useState","showScroll","setShowScroll","checkScrollTop","window","pageYOffset","useEffect","isFetching","addEventListener","removeEventListener","currentPage","scrollTop_wrapper","scrollTop","scrollTo","top","behavior","style","height","display","UsersContainer","users","length","getUsers","content__wrapper","CircularProgress","circleProgress","setCurrentPage","map","u","key","userId","UsersContainerWithRedirect","authRedirectHOC","getUsersSelector","createSelector","state","usersPage","getTotalUsersCountSelector","getPageSizeSelector","getCurrentPageSelector","getIsFetchingSelector","getIsFollowingInProgressTypeSelector","getIsFollowingInProgress","connect","dispath","setFollowingInProgress","userAPI","then","res","data","resultCode","errorHandler","catch","err","serverErrorHandler","setIsFetching","setUsers","items","setTotalUsersCount","totalCount"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,iBAAmB,gCAAgC,4BAA8B,2CAA2C,cAAgB,6BAA6B,kBAAoB,iCAAiC,8BAAgC,6CAA6C,4BAA8B,2CAA2C,mBAAqB,kCAAkC,wBAA0B,uCAAuC,0BAA4B,yCAAyC,KAAO,oBAAoB,YAAc,2BAA2B,eAAiB,8BAA8B,kBAAoB,iCAAiC,UAAY,yBAAyB,OAAS,wB,8FCiB5wBC,EAAmCC,IAAMC,MAAK,SAACC,GAaxD,OAAO,yBAAKC,UAAWC,IAAEC,eACrB,yBAAKF,UAAWC,IAAEE,mBACd,kBAAC,IAAD,CAASC,GAAI,YAAcL,EAAMM,IAC7B,yBACIC,IAAMP,EAAMQ,OAAOC,MAAST,EAAMQ,OAAOC,MANnC,qCAONC,IAAI,OAGhB,yBAAKT,UAAWC,IAAES,oBACd,yBAAKV,UAAWC,IAAEU,yBACd,8BAAOZ,EAAMa,OAEjB,yBAAKZ,UAAWC,IAAEY,2BACd,8BAAOd,EAAMe,UAGrB,yBAAKd,UAAWC,IAAEc,sBACZhB,EAAMiB,SAAY,4BAAQC,QAvBnB,WACblB,EAAMmB,SAASnB,EAAMM,KAsB8BL,UAAWC,IAAEkB,8BAChCC,SAAUrB,EAAMsB,sBAAsBC,MAAK,SAAAjB,GAAE,OAAIA,GAAMN,EAAMM,OAAK,yBACtFC,IAAI,kEAAkEG,IAAI,MAC9E,4BAAQQ,QA9BL,WACXlB,EAAMwB,OAAOxB,EAAMM,KA6BcL,UAAWC,IAAEuB,4BAC9BJ,SAAUrB,EAAMsB,sBAAsBC,MAAK,SAAAjB,GAAE,OAAIA,GAAMN,EAAMM,OAAK,yBACtEC,IAAI,0EAA0EG,IAAI,W,2BCzCzFgB,EAAyD,SAAC1B,GAUnE,IARA,IAII2B,EAAYC,KAAKC,KAAK7B,EAAM8B,gBAAkB9B,EAAM+B,UACpDC,EAAe,GAGVC,EAAI,EAAGN,GAAaM,EAAGA,IAC5BD,EAAaE,KAAKD,GAGtB,OAAO,yBAAKhC,UAAWC,IAAEiC,6BACrB,kBAACC,EAAA,EAAD,CAAYC,MAAOV,EAAWW,aAAc,EAAGC,MAAM,UACzCC,SAAU,SAACC,EAAGC,GAAJ,OAdJC,EAcgCD,OAblD1C,EAAM4C,WAAWD,EAAG3C,EAAM+B,UADT,IAACY,O,iBCLbE,EAAqD,SAAC7C,GAAW,IAAD,EAErC8C,oBAAkB,GAFmB,mBAElEC,EAFkE,KAEtDC,EAFsD,KAYzE,SAASC,KACAF,GAAcG,OAAOC,YAAc,IACpCH,GAAc,GAEdA,GAAc,GAZtBI,qBAAU,WAIN,OAHIpD,EAAMqD,YACNH,OAAOI,iBAAiB,SAAUL,GAAgB,GAE/C,kBAAMC,OAAOK,oBAAoB,SAAUN,MAEnD,CAACC,OAAOC,YAAanD,EAAMwD,cAc9B,OAAO,yBAAKvD,UAAWC,IAAEuD,mBACrB,kBAAC,IAAD,CACIxD,UAAWC,IAAEwD,UACbxC,QAPU,WACdgC,OAAOS,SAAS,CAACC,IAAK,EAAGC,SAAU,YAO/BC,MAAO,CAACC,OAAQ,GAAIC,QAASjB,EAAa,OAAS,YCZzDkB,EAA2CnE,IAAMC,MAAK,SAACC,GASzD,OAPAoD,qBAAU,WACqB,IAAvBpD,EAAMkE,MAAMC,QACZnE,EAAMoE,SAASpE,EAAMwD,YAAaxD,EAAM+B,YAE7C,CAAC/B,EAAMwD,YAAaxD,EAAM+B,WAIzB,yBAAK9B,UAAWC,IAAEmE,kBACbrE,EAAMqD,YAAc,kBAACiB,EAAA,EAAD,CAAkBrE,UAAWC,IAAEqE,iBACpD,kBAAC,EAAD,CAAqBxC,SAAU/B,EAAM+B,SAChByB,YAAaxD,EAAMwD,YACnBZ,WAAY5C,EAAM4C,WAClB4B,eAAgBxE,EAAMwE,eACtB1C,gBAAiB9B,EAAM8B,kBAC5C,kBAAC,EAAD,CAAmB0B,YAAaxD,EAAMwD,YACnBH,WAAYrD,EAAMqD,aAEjCrD,EAAMkE,MAAMO,KAAI,SAAAC,GAUZ,OAAO,kBAAC7E,EAAD,CAAU8E,IAAKD,EAAEpE,GACPA,GAAIoE,EAAEpE,GACNS,OAAQ2D,EAAE3D,OACVP,OAAQkE,EAAElE,OACVS,SAAUyD,EAAEzD,SACZE,SAbC,SAACyD,GACf5E,EAAMmB,SAASyD,IAaFpD,OAVF,SAACoD,GACZ5E,EAAMwB,OAAOoD,IAUA/D,KAAM6D,EAAE7D,KACRS,sBAAuBtB,EAAMsB,+BAQrDuD,EAA6BC,YAAgBb,G,+BCxD7Cc,EAAmBC,aAFD,SAACC,GAAD,OAAWA,EAAMC,UAAUhB,SAED,SAACA,GACtD,OAAOA,KAOEiB,EAA6BH,aAFS,SAACC,GAAD,OAAWA,EAAMC,UAAUpD,mBAED,SAACA,GAC1E,OAAOA,KAOEsD,EAAsBJ,aAFE,SAACC,GAAD,OAAWA,EAAMC,UAAUnD,YAED,SAACA,GAC5D,OAAOA,KAMEsD,EAAyBL,aAFK,SAACC,GAAD,OAAWA,EAAMC,UAAU1B,eAED,SAACA,GAClE,OAAOA,KAME8B,EAAwBN,aAFI,SAACC,GAAD,OAAWA,EAAMC,UAAU7B,cAED,SAACA,GAChE,OAAOA,KAMEkC,EAAuCP,aAFW,SAACC,GAAD,OAAWA,EAAMC,UAAU5D,yBAEG,SAACkE,GAC1F,OAAOA,KCbIC,uBAVS,SAACR,GAAD,MAA4C,CAChEf,MAAOa,EAAiBE,GACxBnD,gBAAiBqD,EAA2BF,GAC5ClD,SAAUqD,EAAoBH,GAC9BzB,YAAa6B,EAAuBJ,GACpC5B,WAAYiC,EAAsBL,GAClC3D,sBAAuBiE,EAAqCN,MAIoC,CAChGzD,OCX6B,SAACoD,GAE9B,OAAO,SAACc,GACJA,EAAQC,aAAuB,EAAMf,IACrCgB,IAAQpE,OAAOoD,GACViB,MAAK,SAAAC,GAC0B,IAAxBA,EAAIC,KAAKC,YACTN,EAAQlE,YAAOoD,IACfc,EAAQC,aAAuB,EAAOf,KAEtCqB,YAAaH,EAAKJ,MAGzBQ,OAAM,SAAAC,GACHC,YAAmBD,EAAKT,QDFpCvE,SCQ+B,SAACyD,GAEhC,OAAO,SAACc,GAEJA,EAAQC,aAAuB,EAAMf,IACrCgB,IAAQzE,SAASyD,GACZiB,MAAK,SAAAC,GAC0B,IAAxBA,EAAIC,KAAKC,YACTN,EAAQvE,YAASyD,IACjBc,EAAQC,aAAuB,EAAOf,KAEtCqB,YAAaH,EAAKJ,MAGzBQ,OAAM,SAAAC,GACHC,YAAmBD,EAAKT,QDtBpCtB,SC7ByB,SAACZ,EAAqBzB,GAE/C,OAAO,SAAC2D,GACJA,EAAQW,aAAc,IACtBT,IAAQU,SAAS9C,EAAazB,GACzB8D,MAAK,SAAAC,GACFJ,EAAQW,aAAc,IACtBX,EAAQY,YAASR,EAAIC,KAAKQ,QAC1Bb,EAAQc,YAAmBV,EAAIC,KAAKU,gBAEvCP,OAAM,SAAAC,GACHC,YAAmBD,EAAKT,QDmBpC9C,WC0B2B,SAACF,EAAcX,GAE1C,OAAO,SAAC2D,GACJA,EAAQlB,YAAe9B,IACvBgD,EAAQW,aAAc,IACtBT,IAAQU,SAAS5D,EAAMX,GAClB8D,MAAK,SAAAC,GACFJ,EAAQY,YAASR,EAAIC,KAAKQ,QAC1Bb,EAAQW,aAAc,OAEzBH,OAAM,SAAAC,GACHC,YAAmBD,EAAKT,SDzCzBD,CAKZZ","file":"static/js/4.a61d47ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content__wrapper\":\"users_content__wrapper__I5n30\",\"content__wrapper_pagination\":\"users_content__wrapper_pagination__1MNj0\",\"content__item\":\"users_content__item__2Yyhu\",\"content__item_img\":\"users_content__item_img__1D76Z\",\"content__item_button_unfollow\":\"users_content__item_button_unfollow__2pV61\",\"content__item_button_follow\":\"users_content__item_button_follow__AmX_9\",\"content__item_info\":\"users_content__item_info__1Xs8f\",\"content__item_info_name\":\"users_content__item_info_name__2HvF9\",\"content__item_info_status\":\"users_content__item_info_status__3AGlj\",\"page\":\"users_page__3334I\",\"active_page\":\"users_active_page__aZlPL\",\"circleProgress\":\"users_circleProgress__3z0Io\",\"scrollTop_wrapper\":\"users_scrollTop_wrapper__uMiAi\",\"scrollTop\":\"users_scrollTop__pkMse\",\"fadeIn\":\"users_fadeIn__2Gngt\"};","import React from \"react\";\r\nimport s from \"./users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PhotoUserType} from \"../../redux/reducers/profilePage-reducer\";\r\n\r\n\r\ntype UserItemType = {\r\n    id: number\r\n    photos: PhotoUserType\r\n    followed: boolean\r\n    name: string | null\r\n    status: string | null\r\n    isFollowingInProgress: number[]\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\n\r\nexport const UserItem: React.FC<UserItemType> = React.memo((props) => {\r\n\r\n\r\n    const follow = () => {\r\n        props.follow(props.id)\r\n    }\r\n\r\n    const unfollow = () => {\r\n        props.unfollow(props.id)\r\n    }\r\n\r\n    let defaultAvatarPhoto = `https://i.ibb.co/F8yML1z/image.png`;\r\n\r\n    return <div className={s.content__item}>\r\n        <div className={s.content__item_img}>\r\n            <NavLink to={'/profile/' + props.id}>\r\n                <img\r\n                    src={(props.photos.small) ? props.photos.small : defaultAvatarPhoto}\r\n                    alt=\"\"/>\r\n            </NavLink>\r\n        </div>\r\n        <div className={s.content__item_info}>\r\n            <div className={s.content__item_info_name}>\r\n                <span>{props.name}</span>\r\n            </div>\r\n            <div className={s.content__item_info_status}>\r\n                <span>{props.status}</span>\r\n            </div>\r\n        </div>\r\n        <div className={s.content__item_button}>\r\n            {(props.followed) ? <button onClick={unfollow} className={s.content__item_button_unfollow}\r\n                                        disabled={props.isFollowingInProgress.some(id => id == props.id)}><img\r\n                    src=\"https://img.icons8.com/material-sharp/24/000000/unsubscribe.png\" alt=\"\"/></button> :\r\n                <button onClick={follow} className={s.content__item_button_follow}\r\n                        disabled={props.isFollowingInProgress.some(id => id == props.id)}><img\r\n                    src=\"https://img.icons8.com/fluent-systems-filled/24/000000/subscription.png\" alt=\"\"/></button>}\r\n        </div>\r\n    </div>\r\n})\r\n\r\n","import React from \"react\";\r\nimport s from \"../users/users.module.css\";\r\nimport {Pagination} from \"@material-ui/lab\";\r\n\r\ntype PaginationComponentType = {\r\n    setCurrentPage: (currentPage: number) => void\r\n    pagination: (page: number, pageSize: number) => void\r\n    totalUsersCount: number,\r\n    pageSize: number,\r\n    currentPage: number,\r\n}\r\n\r\nexport const PaginationComponent: React.FC<PaginationComponentType> = (props) => {\r\n\r\n    let setCurrentPage = (p: number) => {\r\n        props.pagination(p, props.pageSize)\r\n    }\r\n\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let arrPageCount = [];\r\n\r\n\r\n    for (let i = 1; pageCount >= i; i++) {\r\n        arrPageCount.push(i)\r\n    }\r\n\r\n    return <div className={s.content__wrapper_pagination}>\r\n        <Pagination count={pageCount} siblingCount={1} color=\"primary\"\r\n                    onChange={(_, page) => setCurrentPage(page)}/>\r\n    </div>\r\n\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport s from \"../users/users.module.css\";\r\nimport {FaArrowCircleUp} from \"react-icons/fa\";\r\n\r\ntype ButtonUpComponentType = {\r\n    currentPage: number\r\n    isFetching: boolean\r\n}\r\n\r\nexport const ButtonUpComponent: React.FC<ButtonUpComponentType> = (props) => {\r\n\r\n    const [showScroll, setShowScroll] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        if (props.isFetching) {\r\n            window.addEventListener('scroll', checkScrollTop, true)\r\n        }\r\n        return () => window.removeEventListener('scroll', checkScrollTop)\r\n\r\n    }, [window.pageYOffset, props.currentPage])\r\n\r\n    function checkScrollTop() {\r\n        if (!showScroll && window.pageYOffset > 300) {\r\n            setShowScroll(true)\r\n        } else {\r\n            setShowScroll(false)\r\n        }\r\n    };\r\n\r\n    const scrollTop = () => {\r\n        window.scrollTo({top: 0, behavior: 'smooth'});\r\n    };\r\n\r\n    return <div className={s.scrollTop_wrapper}>\r\n        <FaArrowCircleUp\r\n            className={s.scrollTop}\r\n            onClick={scrollTop}\r\n            style={{height: 40, display: showScroll ? 'flex' : 'none'}}\r\n        />\r\n    </div>\r\n\r\n}","import React, {useEffect} from 'react';\r\nimport s from './users.module.css'\r\nimport {UserItem} from \"./UserItem\";\r\nimport {authRedirectHOC} from \"../../hoc/authRedirectHOC\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport {UserType} from \"../../redux/reducers/usersPage-reducer\";\r\nimport {PaginationComponent} from \"../common/PaginationComponent\";\r\nimport {ButtonUpComponent} from '../common/ButtonUpComponent';\r\n\r\nexport type UsersPropsType = {\r\n    follow: (userId: number) => void,\r\n    unfollow: (userId: number) => void\r\n    setUsers: (users: Array<UserType>) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    setIsFetching: (isFetching: boolean) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    pagination: (page: number, pageSize: number) => void\r\n    users: Array<UserType>\r\n    totalUsersCount: number,\r\n    pageSize: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    isFollowingInProgress: number[]\r\n}\r\n\r\nconst UsersContainer: React.FC<UsersPropsType> = React.memo((props) => {\r\n\r\n    useEffect(() => {\r\n        if (props.users.length === 0) {\r\n            props.getUsers(props.currentPage, props.pageSize)\r\n        }\r\n    }, [props.currentPage, props.pageSize]);\r\n\r\n\r\n    return (\r\n        <div className={s.content__wrapper}>\r\n            {props.isFetching && <CircularProgress className={s.circleProgress}/>}\r\n            <PaginationComponent pageSize={props.pageSize}\r\n                                 currentPage={props.currentPage}\r\n                                 pagination={props.pagination}\r\n                                 setCurrentPage={props.setCurrentPage}\r\n                                 totalUsersCount={props.totalUsersCount}/>\r\n            <ButtonUpComponent currentPage={props.currentPage}\r\n                               isFetching={props.isFetching}/>\r\n            {\r\n                props.users.map(u => {\r\n\r\n                    const unfollow = ((userId: number) => {\r\n                        props.unfollow(userId)\r\n                    })\r\n\r\n                    const follow = (userId: number) => {\r\n                        props.follow(userId)\r\n                    }\r\n\r\n                    return <UserItem key={u.id}\r\n                                     id={u.id}\r\n                                     status={u.status}\r\n                                     photos={u.photos}\r\n                                     followed={u.followed}\r\n                                     unfollow={unfollow}\r\n                                     follow={follow}\r\n                                     name={u.name}\r\n                                     isFollowingInProgress={props.isFollowingInProgress}/>\r\n\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n})\r\n\r\nexport const UsersContainerWithRedirect = authRedirectHOC(UsersContainer)\r\n","import {createSelector} from 'reselect'\r\nimport {StateType} from \"../redux-store\";\r\nimport {UserType} from \"../reducers/usersPage-reducer\";\r\n\r\ntype GetUsersType = (state: StateType) => UserType[]\r\ntype GetTotalUsersCountType = (state: StateType) => number\r\ntype GetPageSizeType = (state: StateType) => number\r\ntype GetCurrentPageType = (state: StateType) => number\r\ntype GetIsFetchingType = (state: StateType) => boolean\r\ntype GetIsFollowingInProgressType = (state: StateType) => number[]\r\n\r\n\r\n//Users\r\nconst getUsers: GetUsersType = (state) => state.usersPage.users\r\n\r\nexport const getUsersSelector = createSelector(getUsers, (users) => {\r\n    return users\r\n})\r\n\r\n\r\n//totalUsersCount\r\nconst getTotalUsersCount: GetTotalUsersCountType = (state) => state.usersPage.totalUsersCount\r\n\r\nexport const getTotalUsersCountSelector = createSelector(getTotalUsersCount, (totalUsersCount) => {\r\n    return totalUsersCount\r\n})\r\n\r\n\r\n//pageSize\r\nconst getPageSize: GetPageSizeType = (state) => state.usersPage.pageSize\r\n\r\nexport const getPageSizeSelector = createSelector(getPageSize, (pageSize) => {\r\n    return pageSize\r\n})\r\n\r\n//currentPage\r\nconst getCurrentPage: GetCurrentPageType = (state) => state.usersPage.currentPage\r\n\r\nexport const getCurrentPageSelector = createSelector(getCurrentPage, (currentPage) => {\r\n    return currentPage\r\n})\r\n\r\n//isFetching\r\nconst getIsFetching: GetIsFetchingType = (state) => state.usersPage.isFetching\r\n\r\nexport const getIsFetchingSelector = createSelector(getIsFetching, (isFetching) => {\r\n    return isFetching\r\n})\r\n\r\n//getIsFollowingInProgress\r\nconst getIsFollowingInProgress: GetIsFollowingInProgressType = (state) => state.usersPage.isFollowingInProgress\r\n\r\nexport const getIsFollowingInProgressTypeSelector = createSelector(getIsFollowingInProgress, (getIsFollowingInProgress) => {\r\n    return getIsFollowingInProgress\r\n})","import {connect} from 'react-redux';\r\nimport {UsersContainerWithRedirect} from \"./UsersComponent\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {followToUserThunk, getUsersThunk, paginationThunk, unfollowToUserThunk} from '../../thunks/usersThunk';\r\nimport {\r\n    getCurrentPageSelector,\r\n    getIsFetchingSelector,\r\n    getIsFollowingInProgressTypeSelector,\r\n    getPageSizeSelector,\r\n    getTotalUsersCountSelector,\r\n    getUsersSelector\r\n} from '../../redux/selectors/UsersSelectors';\r\nimport {UserType} from \"../../redux/reducers/usersPage-reducer\";\r\n\r\ntype MapStateToPropsType = {\r\n    users: Array<UserType>\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    isFollowingInProgress: number[]\r\n}\r\ntype MapDispatchToPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    pagination: (page: number, pageSize: number) => void\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => ({\r\n    users: getUsersSelector(state),\r\n    totalUsersCount: getTotalUsersCountSelector(state),\r\n    pageSize: getPageSizeSelector(state),\r\n    currentPage: getCurrentPageSelector(state),\r\n    isFetching: getIsFetchingSelector(state),\r\n    isFollowingInProgress: getIsFollowingInProgressTypeSelector(state),\r\n})\r\n\r\n\r\nexport default connect<MapStateToPropsType, MapDispatchToPropsType,any, StateType>(mapStateToProps, {\r\n    follow: followToUserThunk,\r\n    unfollow: unfollowToUserThunk,\r\n    getUsers: getUsersThunk,\r\n    pagination: paginationThunk,\r\n})(UsersContainerWithRedirect)","import {userAPI} from \"../API/API\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setFollowingInProgress,\r\n    setIsFetching,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    unfollow\r\n} from \"../redux/ActionCreators\";\r\nimport {Dispatch} from \"redux\";\r\nimport {errorHandler, serverErrorHandler} from \"../utils/errorHandlers\";\r\n\r\n\r\nexport const getUsersThunk = (currentPage: number, pageSize: number) => {\r\n\r\n    return (dispath: Dispatch) => {\r\n        dispath(setIsFetching(true))\r\n        userAPI.setUsers(currentPage, pageSize)\r\n            .then(res => {\r\n                dispath(setIsFetching(false))\r\n                dispath(setUsers(res.data.items))\r\n                dispath(setTotalUsersCount(res.data.totalCount))\r\n            })\r\n            .catch(err => {\r\n                serverErrorHandler(err, dispath)\r\n            })\r\n    }\r\n};\r\n\r\nexport const followToUserThunk = (userId: number) => {\r\n\r\n    return (dispath: Dispatch) => {\r\n        dispath(setFollowingInProgress(true, userId))\r\n        userAPI.follow(userId)\r\n            .then(res => {\r\n                if (res.data.resultCode === 0) {\r\n                    dispath(follow(userId))\r\n                    dispath(setFollowingInProgress(false, userId))\r\n                } else {\r\n                    errorHandler(res, dispath)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                serverErrorHandler(err, dispath)\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const unfollowToUserThunk = (userId: number) => {\r\n\r\n    return (dispath: Dispatch) => {\r\n\r\n        dispath(setFollowingInProgress(true, userId))\r\n        userAPI.unfollow(userId)\r\n            .then(res => {\r\n                if (res.data.resultCode === 0) {\r\n                    dispath(unfollow(userId))\r\n                    dispath(setFollowingInProgress(false, userId))\r\n                } else {\r\n                    errorHandler(res, dispath)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                serverErrorHandler(err, dispath)\r\n            })\r\n    }\r\n};\r\n\r\nexport const paginationThunk = (page: number, pageSize: number) => {\r\n\r\n    return (dispath: Dispatch) => {\r\n        dispath(setCurrentPage(page))\r\n        dispath(setIsFetching(true))\r\n        userAPI.setUsers(page, pageSize)\r\n            .then(res => {\r\n                dispath(setUsers(res.data.items))\r\n                dispath(setIsFetching(false))\r\n            })\r\n            .catch(err => {\r\n                serverErrorHandler(err, dispath)\r\n            })\r\n    }\r\n};"],"sourceRoot":""}